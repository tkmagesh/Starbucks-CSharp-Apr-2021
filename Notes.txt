C#
    Java like
        Object Oriented
        Garbage Collector
        Pointer free

    Functional Language
        Functions are first class citizens
            Functions can be treated like objects
                Can be assigned to variables
                Higher Order Functions
                    Functions as arguments
                    Can be returned as returned values

        LINQ (Language Integrated Query)


Type System
Programming Constructs
    Declare variables
    Conditional Statements
    Looping Constructs
    Classes
    Abstractions

Unique features
    Looping constructs are obsolete
    Decision constructs are obsolete
    Mutations are obsolete

Type System
    Value Type
        sbyte, byte, short, ushort, int, uint, long, ulong, bool, struct, decimal, double
        enum, struct

    Reference Type
        Classes
            encapsulation of state & behavior
    
Custom Types
    struct
    class
    record
    interfaces
    enum

Application organization
    Namespaces (logical)
    Assembly (physical) (.dll, .exe)

Implicitly Typed Local Variables
    Type Inference (compiler feature)

    Intermediate Language (IL)

Control Statements
    Conditional Branching Statements
        if else, switch case
    Iteration Statements
        for, while, do while, foreach
        
    Jump Statements
        break, continue, return, yield, goto

User Defined Types
    Classes
    Structures
    Enumerations


Classes
    Blueprint for an object
        Encapsulates state & behavior & events
        State
            Field
            Property (A field with get & set)
        Behavior
            Method

    Access Modifiers
        public, private, protected, internal

    Class Members
        Instance Members
            accessible ONLY using the instance of the class (object)

        Static Members
            accessible using the 'Class' reference

    Constructor Methods


Id, FN, LN

Id,
FN,
LN,
Id, FN,
Id, LN,
FN, LN,
Id, FN, LN

Singleton
Dependency Injection Frameworks in C#
Unity
Autofac
Castle Windsor
NInject
Managed Extensibility Framework (MEF)

Create a Calculator Class 
    N1, N2, Result
    Add()
    Subtract()
    Multiply()
    Divide()

Object Oriented Programming
    4 tenets
        Encapsulation

        Abstraction
            Expose only necessary attributes & methods to the outside world

        Inheritance
            Group related types together
        Polymorphism

Assignment
    Create a Products collection
        Add new products
        Get the count of the products
        Get a product by index
        Get a product by Id
        Remove a product
        Iterate through the collecting using foreach
Sort the products




System.LINQ
    Enumerable
        Class where all the collection utils are implemented as extension methods for IEnumberable<T>